<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>GuoDong の Blog</title>
  
  
  <link href="https://tyxiumud.github.io/atom.xml" rel="self"/>
  
  <link href="https://tyxiumud.github.io/"/>
  <updated>2022-05-07T14:16:03.219Z</updated>
  <id>https://tyxiumud.github.io/</id>
  
  <author>
    <name>Jelly</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>个人博客搭建总结</title>
    <link href="https://tyxiumud.github.io/posts/0a5463f84dc9/"/>
    <id>https://tyxiumud.github.io/posts/0a5463f84dc9/</id>
    <published>2022-05-07T08:55:14.000Z</published>
    <updated>2022-05-07T14:16:03.219Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="图片压缩"><a href="#图片压缩" class="headerlink" title="图片压缩"></a>图片压缩</h1><p>Butterfly主题需要使用到很多图片。如果图片太大，会严重拖慢网站的加载速度。图片压缩能够有效的缓解这个问题。除了通过gulp-imagemin来压缩图片，还可以通过在綫压缩网站和软件来进行压缩。推荐网站<a href="https://tinypng.com/">https://tinypng.com/</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="个人博客搭建" scheme="https://tyxiumud.github.io/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
    <category term="Hexo" scheme="https://tyxiumud.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>基础知识之三——标准单元库</title>
    <link href="https://tyxiumud.github.io/posts/4279b87df92c/"/>
    <id>https://tyxiumud.github.io/posts/4279b87df92c/</id>
    <published>2022-05-06T03:44:12.000Z</published>
    <updated>2022-05-08T13:27:18.308Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="综述"><a href="#综述" class="headerlink" title="综述"></a>综述</h1><p>Synopsys_工艺库格式是事实上的库标准。对库格式和延时计算方法的基本理解是成功综合的关键Synopsys工艺库可分为两大类：<br>逻辑库：包含仅与综合过程有关的信息且通过DC用于设计的综合和优化。如pin到pin的时序、面积、引脚类型等<br>物理库：包含单元的物理特征，如物理尺寸、层信息、单元方位等。</p><p>半导体厂商提供给我们DC兼容的工艺技术库——<strong>综合库</strong>来进行逻辑综合。大多数情况下，半导体厂商提供二进制格式的.db文件，也有可能只提供文本(ASCII)格式的.lib文件，或两者。DC使用的综合库必须是.db格式的库。因此，如果我们只有.lib文件，需要用Library Compiler将其转换为.db文件。</p><p>综合库的结构如下图所示。<img src="https://cdn.jsdelivr.net/gh/tyxiumud/blog.img/image-20220504112821556.png" alt="综合库的结构"></p><p>可以将其分为两个部分，标题部分与单元描述部分。我们使用smic180工艺下的typical.lib进行分析。</p><p>其中标题部分主要是介绍使用的延时模型，工艺角，库的名称等一些公共部分，后面的部分是库里单元的描述，也是这个文件的主要部分。文档一共214835行，其中第一部分一共由250行左右进行描述，剩下的都是对单元的描述。</p><p>对应的文本描述如下所示。下面也将通过介绍标题部分以及特定的几个单元描述来进行总结学习。参考的smic180-typical.lib</p><p><img src="https://cdn.jsdelivr.net/gh/tyxiumud/blog.img/image-20220504114613505.png" alt="单元库的文本描述"></p><h1 id="库属性部分"><a href="#库属性部分" class="headerlink" title="库属性部分"></a>库属性部分</h1><ul><li>库组(library group)</li><li>工艺库的一般属性(general attributes)</li><li>库文档资料(documentation attributes)</li><li>单位定义(unit attributes)</li></ul><h2 id="1，库组-library-Group"><a href="#1，库组-library-Group" class="headerlink" title="1，库组(library Group)"></a>1，库组(library Group)</h2><p>库组指令定义工艺库名。这个指令必须是在库文件中的第一个可执行行。例如：<br>library(my_library)<br>{<br>…}</p><h2 id="2，工艺库的一般属性-general-attributes"><a href="#2，工艺库的一般属性-general-attributes" class="headerlink" title="2，工艺库的一般属性(general attributes)"></a>2，工艺库的一般属性(general attributes)</h2><p>包括以下属性</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* general attributes */</span></span><br><span class="line">delay_model : table_lookup;</span><br><span class="line">in_place_swap_mode : match_footprint;</span><br><span class="line">library_features(report_delay_calculation);库特征 也就是这个库具有延迟计算的特征</span><br><span class="line"></span><br><span class="line">in_place_swap_mode : [match_footpoint/no_swapping];   替代交换方式 这里选的是匹配封装的方式。具体的信息可以查阅其他治疗或者询问半导体厂商。</span><br><span class="line">bus_naming_style : <span class="string">&quot;Bus***...&quot;</span>;   总线命名方式 例如：bus_naming_style:<span class="string">&quot;Bus%spin%d&quot;</span>;这个库没有进行总线规则的命名。</span><br></pre></td></tr></table></figure><h3 id="1-technology-工艺类型"><a href="#1-technology-工艺类型" class="headerlink" title="1)technology  工艺类型"></a>1)technology  工艺类型</h3><p>工艺属性定义用来区别时序分析的设计是基于那种类型的设计。目前有两种类型的设计需要时序分析，一种是ASIC设计，一种是FPGA设计。但是它们在设计流程上有很大的不同，所以在进行时序分析时也有所区别。因此工艺属性有两个设置值可以选择：CMOS和FPGA。</p><p>工艺属性识别库中使用的工艺类型：CMOS(预设值)、 FPGA。工艺类型必须先定义，放在属性清单的顶部。如果库中没有技术属性，Library Compiler预设其为cmos。</p><h3 id="2-in-place-swap-mode"><a href="#2-in-place-swap-mode" class="headerlink" title="2)in_place_swap_mode"></a>2)in_place_swap_mode</h3><p>设计工具需要对设计进行时序和功耗优化，最基本的方法就是把不合适的单元替换成合适的单元。但是是否可以允许设计工具进行单元替换优化操作，需要在时序信息文件中通过单元优化替换属性进行定义。因此单元优化替换属性有两个设置值可以选择：match footprint和no swapping。</p><h3 id="3-library-features"><a href="#3-library-features" class="headerlink" title="3)library_features"></a>3)library_features</h3><p>工艺库特征属性定义其他Synopsys工具可以使用具有该工艺库特征定义的命令进行设计。工艺库特征属性有5个设置值可以选择：report_delay_calculation、report_power_calculation、report_noise_calculation、report_user_data和allow_update_attribute。</p><h3 id="4-delay-model-延时模型"><a href="#4-delay-model-延时模型" class="headerlink" title="4)delay_model  延时模型"></a>4)delay_model  延时模型</h3><p>指明在计算延迟时用的那个模型，主要有generic_cmos(默认值)、table-lookup(非线性模型)、piecewise-cmos(optional)、dcm(Delay Calculation Module)、polynomial。如果库组中没有定义延时模型属性，那么默认设置是generic_cmos。</p><p><img src="https://cdn.jsdelivr.net/gh/tyxiumud/blog.img/image-20220505133009410.png" alt="delay_model 延时模型"></p><h4 id="a-非线性模型"><a href="#a-非线性模型" class="headerlink" title="a)非线性模型"></a>a)非线性模型</h4><p>大多数单元库都包括表格模型(table model)，用于为单元的各种时序弧指定延迟并进行时序检查。 这些表格模型被称为NLDM(Non-Linear Delay Model)，可用于延迟、输出压摆计算或其他时序检查。表格模型中提供了：在单元输入引脚处输入过渡时间和输出引脚处输出负载电容的各种组合下通过单元的延迟。</p><p> CMOS非线性延时计算模型(NLDM)是一种时序计算精度较高的延时计算模型。在Synopsys工艺库模型中，目前业界主要使用非线性延时计算模型。该延时模型由&#x3D;&#x3D;<strong>输入信号转换时间</strong>&#x3D;&#x3D;与&#x3D;&#x3D;<strong>输出负载</strong>&#x3D;&#x3D;作为索引，时序分析时以一个二维查找表的形式来计算延时，查找表中时序数据的实际构成如下图所示。</p><img src="https://cdn.jsdelivr.net/gh/tyxiumud/blog.img/image-20220505134501911.png" alt="查找表构成" style="zoom:80%;" /><p>基于非线性延时计算模型通常的计算过程为：查找表中索引参数的某个采样点延时可直接查表得出，再通过插值算法来计算延时。通过非线性延时计算模型计算所能达到的精度有赖于采样点选取的合理性以及所用的插值算法。只要采样点较为合理，采用一般的多项式插值算法就能取得较好的延时结果。延时的一般插值计算方法如图所示</p><p><img src="https://cdn.jsdelivr.net/gh/tyxiumud/blog.img/image-20220505134557942.png"></p><p>三维坐标中，X为输入端口信号的跳变时间Transition time(ns)，y为输出端负载电容值Cload(pf)，Z为延时值Tdelay(ns)，计算式为<code>Z=A+B·X+C·Y+D·X·Y</code>如果要计算X&#x3D;0.32、Y&#x3D;0.05时的Z值，只需取最接近X、Y的4个采样点。构建如下方程</p><p><img src="https://cdn.jsdelivr.net/gh/tyxiumud/blog.img/image-20220505135114504.png" alt="插值近似方程组"></p><p>A&#x3D;0.2006,B&#x3D;0.1983,C&#x3D;0.2399,D&#x3D;0.0677。带入X、Y即可</p><p><img src="https://cdn.jsdelivr.net/gh/tyxiumud/blog.img/image-20220505135214006.png" alt="延时计算"></p><p>现已经通过查找表与插值的方式计算得到了单元延时。</p><p><img src="https://cdn.jsdelivr.net/gh/tyxiumud/blog.img/image-20220506000624568.png"></p><p><code>Dc</code>是通过<code>WLM</code>(wire load model)以及<code>type_tree</code>来进行计算的，参看文章后续的这两个部分即可得到线延时。</p><p><img src="https://cdn.jsdelivr.net/gh/tyxiumud/blog.img/image-20220505194504208.png"></p><p>如下图所示，计算逻辑门U1的Dcell值时，先确定输入端口的转换时间，U1输入端口的转换时间由前级单元U0的输出决定。当U0的输出为上升（rise）转换时间时，由于U1的时序弧为反向时序弧，因此U1的逻辑门延时应该在对应的U1下降时序弧查找表中进行插值计算。由于下降时序弧查找表是二维表，因此还需要确定U1输出端负载值，通过互连线负载模型和驱动节点负载值得到输出端总负载值。最后，根据U1输入端口转换时间和输出端负载电容值作为索引，在对应的U1下降时序弧二维查找表得到相应数据，并进行插值计算直接得到延时。</p><p><img src="https://cdn.jsdelivr.net/gh/tyxiumud/blog.img/image-20220505213859119.png"></p><h2 id="3，库文档资料-documentation-attributes"><a href="#3，库文档资料-documentation-attributes" class="headerlink" title="3，库文档资料(documentation attributes)"></a>3，库文档资料(documentation attributes)</h2><p>主要是库的版本、库的日期、还有注释。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">revision : ***;</span><br><span class="line">date : ***;</span><br><span class="line">comment : ***;</span><br></pre></td></tr></table></figure><h2 id="4，单位定义-unit-attributes"><a href="#4，单位定义-unit-attributes" class="headerlink" title="4，单位定义(unit attributes)"></a>4，单位定义(unit attributes)</h2><p> Design Compiler工具本身是没有单位的。然而在建立工艺库和产生报告时，必须要有单位。库中有6个库级属性定义单位:</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">time_unit : <span class="string">&quot;1ns&quot;</span>;   时间单位</span><br><span class="line">voltage_unit : <span class="string">&quot;1V&quot;</span>;   电压单位</span><br><span class="line">current_unit : <span class="string">&quot;1mA&quot;</span>;   电流单位</span><br><span class="line">pulling_resistance_unit : <span class="string">&quot;1kohm&quot;</span>;   上下拉电阻单位</span><br><span class="line">leakage_power_unit : <span class="string">&quot;1pW&quot;</span>;　　漏电功耗</span><br><span class="line">capacitive_load_unit : (<span class="number">1.0</span>,pf);　　电容单位</span><br></pre></td></tr></table></figure><p>单元描述中数值的单位都是在库中指定的，可使用Liberty命令集在库文件中声明单位。  </p><h1 id="环境属性部分"><a href="#环境属性部分" class="headerlink" title="环境属性部分"></a>环境属性部分</h1><ul><li>操作环境(operation conditions)</li><li>阈值定义(threshold definitions)</li><li>默认环境属性(default attributes)</li><li>模板(templates)</li><li>比例缩放因子(k-factors)</li><li>I&#x2F;Opad属性(pad attributes)</li><li>线负载模型(wire-loads)</li></ul><h2 id="1，工作条件-operation-conditions"><a href="#1，工作条件-operation-conditions" class="headerlink" title="1，工作条件(operation conditions)"></a>1，工作条件(operation conditions)</h2><p>指定了工艺、温度、电压以及RC树模型，用于设计的综合和时序分析。</p><p><img src="https://cdn.jsdelivr.net/gh/tyxiumud/blog.img/image-20220505141917579.png" alt="操作环境示意"></p><p>这里就是对于库基本的情况进行了说明。会与slow.lib内容不同。主要是对于温度、电压等操作环境进行说明。</p><p><img src="https://cdn.jsdelivr.net/gh/tyxiumud/blog.img/image-20220505144141794.png" alt="工作条件"></p><p>这里的工作条件与我们之前了解的PVT环境联系到了一起。</p><h3 id="1-tree-type"><a href="#1-tree-type" class="headerlink" title="1)tree_type"></a>1)tree_type</h3><p>tree type属性定义了使用的环境互连模型，DC在计算互连延迟时使用这一属性值来选择合适的公式。</p><p>对于预布局估计，可以使用以下三种不同形式来表示互连RC树。请注意，每个互连线的总长度(以及电阻和电容估计值)在这三种情况下是相同的。  </p><p><img src="https://cdn.jsdelivr.net/gh/tyxiumud/blog.img/image-20220505142752630.png"></p><p>Best-case tree：在最佳情况树中，假定负载引脚在物理上与驱动引脚相邻。因此，到负载引脚的路径中都没有互连电阻，来自其它扇出引脚的所有互连线电容和引脚电容仍然作为驱动引脚上的负载。  </p><p>Balanced tree：在这种情况下，假定每个负载引脚都在互连线的一部分上，并且每条到达负载引脚的路径上的总电阻和电容都相等。  </p><p>Worst-case tree ：在最差情况树中，假定所有负载引脚都集中在互连线的另一端。因此，每条到负载引脚的路径上都会有全部的互连线电阻和电容。  </p><h2 id="2，阈值定义-threshold-definitions"><a href="#2，阈值定义-threshold-definitions" class="headerlink" title="2，阈值定义(threshold definitions)"></a>2，阈值定义(threshold definitions)</h2><p>压摆值(slew)基于的是在库中指定的测量阈值点，大多数上一代的库(0.25um或更旧的库)都使用10％和90％作为压摆(或称过渡时间)的测量阈值点。  </p><p>压摆阈值点的选择对应的是波形的线性部分。随着技术的发展，实际波形最线性的部分通常在30％至70％之间。 因此，大多数新一代时序库都将压摆测量阈值点指定为Vdd的30％和70％。但是，由于之前测得的过渡时间在10％至90％之间，因此在填充库时，通常将测得的30％至70％的过渡时间加倍，这由<strong>压摆降额系数</strong>(slew derate factor)指定，通常指定为0.5。压摆测量阈值点为30％和70％且压摆降额系数为0.5，等效于测量阈值点为10％和90％。 阈值设置的示例如下：  </p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">slew_lower_threshold_pct_fall : <span class="number">30.0</span>;</span><br><span class="line">slew_upper_threshold_pct_fall : <span class="number">70.0</span>;</span><br><span class="line">slew_lower_threshold_pct_rise : <span class="number">30.0</span>;</span><br><span class="line">slew_upper_threshold_pct_rise : <span class="number">70.0</span>;</span><br><span class="line">input_threshold_pct_fall      : <span class="number">50.0</span>;输入上升/下降沿采样点</span><br><span class="line">input_threshold_pct_rise      : <span class="number">50.0</span>;</span><br><span class="line">output_threshold_pct_fall     : <span class="number">50.0</span>;输出上升/下降沿采样点</span><br><span class="line">output_threshold_pct_rise     : <span class="number">50.0</span>;</span><br><span class="line">slew_derate_from_library      : <span class="number">0.5</span>;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/tyxiumud/blog.img/image-20220505145445468.png" alt="阈值设定"></p><p>上面的设置规定了要将表格中的过渡时间乘以0.5，以获得与阈值(30%-70%)设置相对应的过渡时间。这意味着表格中的值(以及相应的索引值)实际上是10%-90%阈值点的测量值。在标定过渡时间值时，首先在30%-70%处测量，然后再把测量值外推到10％至90％((70-30)&#x2F;(90-10)&#x3D; 0.5)。  </p><p><img src="https://cdn.jsdelivr.net/gh/tyxiumud/blog.img/image-20220505151327674.png" alt="修正后如图所示"></p><p>未指定slew_derate_from_library(默认值为1.0)，这意味着库中的过渡时间不会降额(derate)  </p><h2 id="3，默认环境属性-default-attributes"><a href="#3，默认环境属性-default-attributes" class="headerlink" title="3，默认环境属性(default attributes)"></a>3，默认环境属性(default attributes)</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* default attributes */</span></span><br><span class="line">default_leakage_power_density: <span class="number">0.0</span>;</span><br><span class="line">default_cell_leakage_power: <span class="number">0.0</span>;</span><br><span class="line">default_fanout_load: <span class="number">1.0</span>;</span><br><span class="line">default_output_pin_cap: <span class="number">0.0</span>;</span><br><span class="line">default_inout_pin_cap: <span class="number">0.0035</span>;</span><br><span class="line">default_input_pin_cap: <span class="number">0.0035</span>;</span><br><span class="line">default_max_transition: <span class="number">3.0</span>;</span><br></pre></td></tr></table></figure><h3 id="1-漏电功率-leakage-power"><a href="#1-漏电功率-leakage-power" class="headerlink" title="1)漏电功率(leakage_power)"></a>1)漏电功率(leakage_power)</h3><p>大多数标准单元的设计都仅在输出或状态发生变化时才消耗功率。单元通了电但没有任何行为时，所有功耗都归因于泄漏电流(leakage current)。泄漏可能是由于MOS器件的亚阈值电流引起的，也可能是由于通过栅极氧化物的隧穿电流引起的。在以前的CMOS工艺技术中，漏电功率可以忽略不计，并且在设计过程中并不是主要考虑因素。但是，随着技术的发展，漏电功率变得越来越大，与有功功率相比，漏电功率已经无法忽略不计了。</p><p>如上所述，漏电功率主要有两个来源：MOS器件中的亚阈值电流和栅氧化物隧穿。通过使用高阈值电压单元，可以降低亚阈值电流；然而，由于高阈值电压单元的速度较低而存在一个折中(rde-of)：高阈值电压单元的漏电较小，但速度较慢。同样，低阈值电压单元的漏电较大，但速度较高。无论是使用高阈值电压还是低阈值电压的单元，栅极氧化物隧穿带来的影响都差不多。因此，控制漏电功率的可能方法是使用高阈值电压的单元。类似于在高阈值电压和标准阈值电压单元之间进行选择，设计中使用的单元强度(strength)也是一种漏电和速度之间的折中。强度较高的单元具有较高的漏电功率，但速度较高。</p><p>MOS器件的亚阈值泄漏电流与温度具有很强的非线性特性，在大多数工艺技术中，随着器件温度从25°C升高到125°C，亚阈值泄漏电流可能会增加10倍至20倍。栅极氧化物隧穿带来的影响基本不随温度或器件阈值电压而改变，在100m及以上工艺技术中可以忽略的栅极氧化物隧穿已成为65nm或更精细技术在较低温度下漏电的主要原因。例如，对于65m或更精细的工艺技术，栅极氧化物隧穿漏电量可能等于室温下的亚阈值漏电量。而在高温下，亚阈值漏电仍然是导致漏电功率的主要因素。</p><h2 id="4，模板-templates"><a href="#4，模板-templates" class="headerlink" title="4，模板(templates)"></a>4，模板(templates)</h2><p>这里提供了很多查找表的模板。</p><h3 id="1-功耗查找表模板组-power-lut-template-group"><a href="#1-功耗查找表模板组-power-lut-template-group" class="headerlink" title="1)功耗查找表模板组(power lut template group)"></a>1)功耗查找表模板组(power lut template group)</h3><p>功耗查找表模板组(power lut template group)是库组中为其他功耗相关组所调用的查找表模板，通过该模板可以构成一维到三维的查找表结构，如下所示。</p><p><img src="https://cdn.jsdelivr.net/gh/tyxiumud/blog.img/image-20220505190536108.png"></p><p>如上所示存在3个不同的变量：variable1、variable2和variable3，对应的变量参数值也存在3种：total_output_net_capacitance、equal_or_opposite_output_net_capacitance和input_transition_time。通过3个索引变量index1、index2和index3的值来确定最终的功耗结果。</p><p>举例如下：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">power_lut_template(energy_template_7x3x3) &#123;</span><br><span class="line">  variable_1 : input_transition_time;</span><br><span class="line">  variable_2 : total_output_net_capacitance;</span><br><span class="line">  variable_3 : equal_or_opposite_output_net_capacitance;</span><br><span class="line">  index_1 (<span class="string">&quot;1000, 1001, 1002, 1003, 1004, 1005, 1006&quot;</span>);</span><br><span class="line">  index_2 (<span class="string">&quot;1000, 1001, 1002&quot;</span>);</span><br><span class="line">  index_3 (<span class="string">&quot;1000, 1001, 1002&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="b-延时查找表模板组-lu-table-template-group"><a href="#b-延时查找表模板组-lu-table-template-group" class="headerlink" title="b)延时查找表模板组(lu_table_template_group)"></a>b)延时查找表模板组(lu_table_template_group)</h3><p>延时查找表模板组(lu_table_template_group)是库组中为其他延时相关组所调用的查找表模板，通过该模板可以构成一维到三维的查找表结构，如下所示。</p><p><img src="https://cdn.jsdelivr.net/gh/tyxiumud/blog.img/image-20220505190943079.png"></p><p>与功耗查找表模板组结构类似，延时查找表模板组存在3个不同的变量：variable1、variable2和variable3，其中变量参数值根据所调用的延时相关组的不同而不同，主要包括以下变量参数值：input_voltage、output_voltagefanout_number、fanout_pin_capacitance、driver_slew、input_net_transition和total_output_net_capacitance等，通过3个索引变量index 1、index2和index3的值来确定最终的延时结果。</p><p>举例如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">power_lut_template(energy_template_7x7) &#123;</span><br><span class="line">  variable_1 : input_transition_time;</span><br><span class="line">  variable_2 : total_output_net_capacitance;</span><br><span class="line">  index_1 (&quot;1000, 1001, 1002, 1003, 1004, 1005, 1006&quot;);</span><br><span class="line">  index_2 (&quot;1000, 1001, 1002, 1003, 1004, 1005, 1006&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里还有很多其他的模板，不一一列举</p><h2 id="5，比例缩放因子-k-factors"><a href="#5，比例缩放因子-k-factors" class="headerlink" title="5，比例缩放因子(k-factors)"></a>5，比例缩放因子(k-factors)</h2><p>库的表征是一个耗时的过程，针对各种工艺角(process corner)对库进行表征可能需要数周的时间，工艺变量的设置使得以特定工艺角为特征的库可以用于不同工艺角的时序计算。工艺的k-系数可用于完成从特征库工艺到目标工艺的延迟降额。如上所述，降额系数的使用在时序计算期间引入了不准确性，跨工艺条件进行降额尤其不准确，因此很少采用。总而言之，指定不同工艺变量值(例如1.0或任何其它值)的唯一功能就是在少数情况下允许跨工艺条件进行降额处理。</p><p>与作为物理量的温度和电压不同，工艺是不可量化的变量。就数字特征和验证而言，它可能是缓慢(slow)、典型(typical)或快速(fast)的工艺之一。  工作条件(nom_process、nom_temperature和nom_voltage)指定了对库进行表征的工艺、电压和温度， 也指定了使用该库中单元的条件。如果特征和工作条件不同，则需要对延迟计算过程中获得的时序值进行降额(derate)处理， 这可以通过使用库中指定的降额系数(k-系数)来实现 。使得时序分析的结果更接近真实值。</p><p>当延迟计算过程中工作条件的工艺、电压或温度与库中的标称条件不同时，可使用这些系数来进行计算。注意，k_volt系数为负，这意味着延迟随着电压的增加而减小，而k_temp因子为正，这意味着延迟通常随温度的升高而增加 。</p><p><img src="https://cdn.jsdelivr.net/gh/tyxiumud/blog.img/image-20220505185813416.png"></p><p><img src="https://cdn.jsdelivr.net/gh/tyxiumud/blog.img/image-20220505185846312.png"></p><p>形式如下所示：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/* k-factors */</span><br><span class="line"> k_process_cell_leakage_power: 0;</span><br><span class="line"> k_temp_cell_leakage_power: 0;</span><br><span class="line"> k_volt_cell_leakage_power: 0;</span><br><span class="line"> k_process_internal_power: 0;</span><br><span class="line"> k_temp_internal_power: 0;</span><br><span class="line"> k_volt_internal_power: 0;</span><br><span class="line"> k_process_rise_transition: 1;</span><br><span class="line"> k_temp_rise_transition: 0;</span><br><span class="line"> k_volt_rise_transition: 0;</span><br><span class="line"> k_process_fall_transition: 1;</span><br><span class="line"> k_temp_fall_transition: 0;</span><br><span class="line"> k_volt_fall_transition: 0;</span><br><span class="line"> k_process_setup_rise: 1;</span><br><span class="line"> k_temp_setup_rise: 0;</span><br><span class="line"> k_volt_setup_rise: 0;</span><br><span class="line"> k_process_setup_fall: 1;</span><br><span class="line"> k_temp_setup_fall: 0;</span><br><span class="line"> k_volt_setup_fall: 0;</span><br><span class="line"> k_process_hold_rise: 1;</span><br><span class="line"> k_temp_hold_rise: 0;</span><br><span class="line"> ...</span><br></pre></td></tr></table></figure><h2 id="6，I-x2F-Opad属性-pad-attributes"><a href="#6，I-x2F-Opad属性-pad-attributes" class="headerlink" title="6，I&#x2F;Opad属性(pad attributes)"></a>6，I&#x2F;Opad属性(pad attributes)</h2><p>定义I&#x2F;O引脚的电平属性，告诉你输入是COMS还是TTL，什么时候达到高电平、什么时候是低电平。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/* pad attributes */</span><br><span class="line">output_voltage(GENERAL) &#123;</span><br><span class="line">  vol: 0.4;</span><br><span class="line">  voh: VDD - 0.4;</span><br><span class="line">  vomin: -0.5;</span><br><span class="line">  vomax: VDD + 0.5;</span><br><span class="line">&#125;</span><br><span class="line">input_voltage(CMOS) &#123;</span><br><span class="line">  vil: 0.3 * VDD;</span><br><span class="line">  vih: 0.7 * VDD;</span><br><span class="line">  vimin: -0.5;</span><br><span class="line">  vimax: VDD + 0.5;</span><br><span class="line">&#125;</span><br><span class="line">input_voltage(TTL) &#123;</span><br><span class="line">  vil: 0.8;</span><br><span class="line">  vih: 2;</span><br><span class="line">  vimin: -0.5;</span><br><span class="line">  vimax: VDD + 0.5;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="7，线负载模型-wire-loads"><a href="#7，线负载模型-wire-loads" class="headerlink" title="7，线负载模型(wire-loads)"></a>7，线负载模型(wire-loads)</h2><p>在进行布局规划(floorplanning)或布局(layout)之前，可以使用线负载模型(wireload models)来估计由互连线带来的电容、电阻以及面积开销。 线负载模型可用于根据扇出数量来估计网络的长度，线负载模型取决于块(block)的面积，具有不同面积的设计可以选择不同的线负载模型。线负载模型还可以将网络的估计长度映射(map)为电阻、电容以及由于布线而产生的相应面积开销。   形式如下：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* wire-loads */</span></span><br><span class="line">wire_load(<span class="string">&quot;smic18_wl10&quot;</span>) &#123;</span><br><span class="line">  resistance: <span class="number">8.5e-8</span>;</span><br><span class="line">  capacitance: <span class="number">1.5e-4</span>;</span><br><span class="line">  area: <span class="number">0.7</span>;</span><br><span class="line">  slope: <span class="number">66.667</span>;</span><br><span class="line">  fanout_length(<span class="number">1</span>,<span class="number">66.667</span>);</span><br><span class="line">&#125;</span><br><span class="line">wire_load(<span class="string">&quot;smic18_wl20&quot;</span>) &#123;</span><br><span class="line">  resistance: <span class="number">8.5e-8</span>;</span><br><span class="line">  capacitance: <span class="number">1.5e-4</span>;</span><br><span class="line">  area: <span class="number">0.7</span>;</span><br><span class="line">  slope: <span class="number">133.334</span>;</span><br><span class="line">  fanout_length(<span class="number">1</span>,<span class="number">133.334</span>);</span><br><span class="line">&#125;</span><br><span class="line">wire_load(<span class="string">&quot;smic18_wl30&quot;</span>) &#123;</span><br><span class="line">  resistance: <span class="number">8.5e-8</span>;</span><br><span class="line">  capacitance: <span class="number">1.5e-4</span>;</span><br><span class="line">  area: <span class="number">0.7</span>;</span><br><span class="line">  slope: <span class="number">200.001</span>;</span><br><span class="line">  fanout_length(<span class="number">1</span>,<span class="number">200.001</span>);</span><br><span class="line">&#125;</span><br><span class="line">......</span><br></pre></td></tr></table></figure><p>其中参数wire load定义线负载模型的名称，参数resistance定义互连线单位电阻值，参数capacitance定义互连线单位电容值，参数area定义互连线单位长度的面积值，参数slope定义扩展斜率值，参数fanout length定义对应扇出大小的互连线长度。</p><p><img src="https://cdn.jsdelivr.net/gh/tyxiumud/blog.img/image-20220505154443537.png"></p><p><img src="https://cdn.jsdelivr.net/gh/tyxiumud/blog.img/image-20220505154453497.png"></p><p>至此，我们得到了互连线的电阻与电容。</p><h3 id="补充：tree-type与线负载模型的关系"><a href="#补充：tree-type与线负载模型的关系" class="headerlink" title="补充：tree-type与线负载模型的关系"></a>补充：tree-type与线负载模型的关系</h3><p>线负载模型(<code>WLM</code>)是根据连线的扇出来估算连线的RC寄生参数那么RC是如何分配呢？<br><strong>操作条件中有“tree-type’”的属性，该属性决定R和C的分配以计算时间延迟</strong>这也是tree-type与线负载模型的关系，也是笔者学习的时候不是很好理解的部分。</p><p>简单来说就是需要用线负载模型去计算一个R，C，那么RC是怎么影响延时的呢，就是看其在电路中的拓扑结构。</p><p><img src="https://cdn.jsdelivr.net/gh/tyxiumud/blog.img/image-20220505182507290.png"></p><p>这里的图与上述tree_type部分介绍的实际上是一致的。</p><h1 id="单元描述部分"><a href="#单元描述部分" class="headerlink" title="单元描述部分"></a>单元描述部分</h1><ul><li>单元描述</li></ul><p>该部分提供了库里标准单元的描述。标准单元也可以在提供的doc下的文档中找到。文档标题如下</p><p><img src="https://cdn.jsdelivr.net/gh/tyxiumud/blog.img/image-20220505191436806.png"></p><p>这里使用几个特殊的标准单元进行学习。<code>DFFR</code>，以及<code>INV</code>。其余基本上是一致的。</p><h2 id="1，INV"><a href="#1，INV" class="headerlink" title="1，INV"></a>1，INV</h2><p><img src="https://cdn.jsdelivr.net/gh/tyxiumud/blog.img/image-20220505214910528.png"></p><p>lib中的描述如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cell (INVX20) &#123; </span><br><span class="line">  cell_footprint : inv;</span><br><span class="line">  area : 63.201600;</span><br><span class="line">  pin(A) &#123;</span><br><span class="line">    direction : input;</span><br><span class="line">    capacitance : 0.011338;</span><br><span class="line">  &#125;</span><br><span class="line">  pin(Y) &#123;</span><br><span class="line">    direction : output;</span><br><span class="line">    capacitance : 0.0;</span><br><span class="line">    function : &quot;(!A)&quot;;</span><br><span class="line">    internal_power() &#123;</span><br><span class="line">      ...(略)</span><br><span class="line">    &#125;</span><br><span class="line">    timing() &#123;</span><br><span class="line">      related_pin : &quot;A&quot;;</span><br><span class="line">      timing_sense : negative_unate;</span><br><span class="line">      cell_rise(delay_template_7x7) &#123;</span><br><span class="line">        index_1 (&quot;0.03, 0.1, 0.4, 0.9, 1.5, 2.2, 3&quot;);   /*input_net_transition*/</span><br><span class="line">        index_2 (&quot;0.007, 0.42, 0.77, 1.68, 2.94, 4.62, 6.23&quot;);/* total_output_net_capacitance */</span><br><span class="line">        values ( ...);/* delay */</span><br><span class="line">      &#125;</span><br><span class="line">      rise_transition(delay_template_7x7) &#123;</span><br><span class="line">        index_1 (&quot;0.03, 0.1, 0.4, 0.9, 1.5, 2.2, 3&quot;);</span><br><span class="line">        index_2 (&quot;0.007, 0.42, 0.77, 1.68, 2.94, 4.62, 6.23&quot;);</span><br><span class="line">        values (...)</span><br><span class="line">      &#125;</span><br><span class="line">      cell_fall(delay_template_7x7) &#123;</span><br><span class="line">        index_1 (&quot;0.03, 0.1, 0.4, 0.9, 1.5, 2.2, 3&quot;);</span><br><span class="line">        index_2 (&quot;0.007, 0.42, 0.77, 1.68, 2.94, 4.62, 6.23&quot;);</span><br><span class="line">        values (...);</span><br><span class="line">      &#125;</span><br><span class="line">      fall_transition(delay_template_7x7) &#123;</span><br><span class="line">        index_1 (&quot;0.03, 0.1, 0.4, 0.9, 1.5, 2.2, 3&quot;);</span><br><span class="line">        index_2 (&quot;0.007, 0.42, 0.77, 1.68, 2.94, 4.62, 6.23&quot;);</span><br><span class="line">        values ( ...);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    max_capacitance : 6.230000;</span><br><span class="line">  &#125;</span><br><span class="line">  cell_leakage_power : 504.392580;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-引脚电容"><a href="#1-引脚电容" class="headerlink" title="1)引脚电容"></a>1)引脚电容</h3><p>单元的每个输入和输出都可以在引脚（pin）上指定电容。在大多数情况下，仅为单元输入引脚指定电容，而不为输出引脚指定<br>电容，即大多数单元库中的输出引脚电容为0。  </p><h3 id="2-internal-power"><a href="#2-internal-power" class="headerlink" title="2)internal power"></a>2)internal power</h3><p>内部开关功率在单元库中被称为internal power，这是当单元的输入或输出处于活动状态时单元内部的功耗。对于组合逻辑单元，输入引脚的电平跳变会导致输出引脚的电平跳变，从而导致内部开关功耗。  </p><h3 id="3-时序模型"><a href="#3-时序模型" class="headerlink" title="3)时序模型"></a>3)时序模型</h3><p>逻辑单元的时序模型（timing model）旨在为设计中的各种单元实例（instance）提供准确的时序信息。通常会从单元的详细电路仿真中获得时序模型，用以对单元工作时的实际情况进行建模，且需要为逻辑单元的每个时序弧都建立一个时序模型。</p><p>表征反相器的两种延迟是：<br>Tr：输出上升沿延迟<br>Tf：输出下降沿延迟  </p><p>通过反相器的时序弧的延迟取决于两个因素  input_net_transition以及total_output_net_capacitance。</p><p>逻辑单元输出引脚的压摆（slew）主要取决于输出引脚电容：输出信号过渡时间会随着输出负载的增加而增加。 因此，在输入端压摆较大（输入信号过渡时间较长）的情况下，选择合适的单元类型及输出负载，可以改善输出端的压摆。  下图展示了通过调节逻辑单元的输出负载，可以改善或恶化单元输出信号过渡时间的情况。  </p><p><img src="https://cdn.jsdelivr.net/gh/tyxiumud/blog.img/image-20220505221525284.png" alt="Slew changes going through a cell  "></p><p>一个简单的时序模型是 linear delay 模型，其中单元的延迟和输出转换时间表示为两个参数的线性函数：输入转换时间和输出负载电容。通过单元的延迟 D 的线性模型的一般形式如下所示<code>:D=D0+D1*S+D2*C</code>其中D0，D1，D2是常数，S是输入过渡时间，C是输出负载电容  </p><h2 id="2，DFFR"><a href="#2，DFFR" class="headerlink" title="2，DFFR"></a>2，DFFR</h2><p>先看文档描述如下图，可以看到有四种不同驱动强度的，对应这不同的size。我们选择DFFRX4的工艺库文件进行学习。这是一个带复位的寄存器。</p><p><img src="https://cdn.jsdelivr.net/gh/tyxiumud/blog.img/image-20220505222103992.png"></p><p>我们对DFFRX4的lib内容进行学习，开始同样是cellname,area以及功耗。我们略过看时序的部分。</p><p><img src="https://cdn.jsdelivr.net/gh/tyxiumud/blog.img/image-20220505223213311.png"></p><p>setup_rising指相关引脚D的上升和下降建立时间。hold_rising是对应的保持时间。这就是我们STA里说到的。这里会进行计算。</p><p><img src="https://cdn.jsdelivr.net/gh/tyxiumud/blog.img/image-20220505223352898.png"></p><p>脉冲宽度检查 。对于CK引脚有了脉冲宽度的检查，也是对时钟另一种约束，类似于出现毛刺，或者是超高频，DFF就不可以正常工作，这里随着工艺会不断改变。</p><p><img src="https://cdn.jsdelivr.net/gh/tyxiumud/blog.img/image-20220505223634753.png"></p><p>对于复位引脚recover与removal的时序要求如上图所示。接下来就是输出了。</p><p><img src="https://cdn.jsdelivr.net/gh/tyxiumud/blog.img/image-20220505223752206.png"></p><p>首先是对功能的描述，其次就是对PIN(Q)功耗的查找表。我们重点关注时序信息。</p><p>非单边类型（non-unate）的时序弧 。(在非单边（non-unate）时序弧中，仅仅从一个输入引脚的跳变方向是无法确定输出引脚电平将如何跳变的，还要取决于其他输入引脚的状态。  )</p><p><img src="https://cdn.jsdelivr.net/gh/tyxiumud/blog.img/image-20220505225030281.png"></p><p>PIN(Q)与CK有关的传播延时。</p><p><img src="https://cdn.jsdelivr.net/gh/tyxiumud/blog.img/image-20220505225202893.png"></p><p>对于Q还在引脚级别定义了功耗。</p><p><img src="https://cdn.jsdelivr.net/gh/tyxiumud/blog.img/image-20220505225253967.png"></p><p>这里的时序弧类型是负单边（negative unate）类型 </p><p>如果输入引脚上的上升沿跳变导致输出引脚电平下降（或不变），而输入引脚上的下降沿跳变导致输出引脚电平上升（或不变），则时序弧为负单边（negative unate）类型 。当复位有效时候，输输出变为0的延时时间。注意这里只有下降，很好理解，当你复位的时候，要是Q是0的话，也就不需要进行动作了。同时定义了max_capacitance。</p><p><img src="https://cdn.jsdelivr.net/gh/tyxiumud/blog.img/image-20220505225606750.png"></p><p><img src="https://cdn.jsdelivr.net/gh/tyxiumud/blog.img/image-20220505225645466.png"></p><p>对于引脚QN的时序模型。与Q的模型很类似，这里不进行分析。</p><p>总结一下对于DFFR的时序模型。CK对于D查建立时间，保持时间。对复位查恢复撤离时间，对于Q计算传播延时，对于CK本身，查脉冲宽度。</p><p><img src="https://cdn.jsdelivr.net/gh/tyxiumud/blog.img/image-20220505225811130.png"></p><p><img src="https://cdn.jsdelivr.net/gh/tyxiumud/blog.img/image-20220505225934898.png"></p><p>至此，前面总结了STA的相关知识，这里对于DC综合标准单元lib库进行了学习，后续将开始<strong>时钟</strong>的学习。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="DC学习" scheme="https://tyxiumud.github.io/categories/DC%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="DC" scheme="https://tyxiumud.github.io/tags/DC/"/>
    
  </entry>
  
  <entry>
    <title>hexo博文写作——Typora的使用</title>
    <link href="https://tyxiumud.github.io/posts/7ddf536be75c/"/>
    <id>https://tyxiumud.github.io/posts/7ddf536be75c/</id>
    <published>2022-05-02T03:36:08.000Z</published>
    <updated>2022-05-07T14:15:12.191Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="hexo博文写作——Typora的使用"><a href="#hexo博文写作——Typora的使用" class="headerlink" title="hexo博文写作——Typora的使用"></a>hexo博文写作——Typora的使用</h1><p>Typora是一款Markdown编辑器，可以使得你的编辑所见即所得。Typora更多的快捷键以及可以和图床<code>PicGo</code>进行联合使用(图床就是专门用来存放图片，允许你把图片对外连接的网上空间)。从而方便的进行文本编辑而不需要去关心图片的管理问题。其次使用简单，方便，保存都是在本地进行管理，可以保证数据的安全，页面简介简单，功能非常强大。</p><p>简单来说有以下的优点：</p><ul><li>快捷键多，文本编辑速度快</li><li>图片管理极为方便</li><li>功能强大，页面简介</li></ul><p>接下来介绍安装，常用快捷键的使用，图床的设置与相关问题</p><h1 id="安装地址"><a href="#安装地址" class="headerlink" title="安装地址"></a>安装地址</h1><p><a href="https://support.typora.io/">Typora支持地址</a></p><p>官网<a href="https://typora.io/">下载地址</a></p><h1 id="常用快捷键"><a href="#常用快捷键" class="headerlink" title="常用快捷键"></a>常用快捷键</h1><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><p>在Typora中，也可以使用快捷键<code>Ctrl+1（2，3，4，5，6）</code>表示相对应的标题。<code>Ctrl+0</code>表示段落。</p><h2 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h2><p>一般使用的字体如下</p><table><thead><tr><th>字体描述</th><th>快捷键</th></tr></thead><tbody><tr><td><strong>黑体</strong></td><td><code>Ctrl+B</code></td></tr><tr><td><u>下划线</u></td><td><code>Ctrl+U</code></td></tr><tr><td><del>删除线</del></td><td><code>Alt+Shift+5</code></td></tr><tr><td><em>斜体</em></td><td><code>Ctrl+Shift+I</code></td></tr></tbody></table><p>选中字体使用快捷键即可，也可以直接使用后输入文本。</p><h3 id="文本颜色与大小"><a href="#文本颜色与大小" class="headerlink" title="文本颜色与大小"></a>文本颜色与大小</h3><p>可以使用使用<code>&lt;font&gt; &lt;/font&gt;</code>标签来改变字体的颜色及大小。</p><p>如下：所示</p><p><code>&lt;font size=3 color=&quot;red&quot;&gt;字体颜色为红色，大小为3&lt;/font&gt;</code></p><p><code>&lt;font size=4 color=&quot;blue&quot;&gt;字体颜色为蓝色，大小为4&lt;/font&gt;</code></p><p><code>&lt;font size=6 color=&quot;violet&quot;&gt;字体颜色为紫罗兰，大小为6&lt;/font&gt;</code></p><p><font size=3 color="red">字体颜色为红色，大小为3</font></p><p><font size=4 color="blue">字体颜色为蓝色，大小为4</font></p><p><font size=6 color="violet">字体颜色为紫罗兰，大小为6</font></p><h3 id="文本高亮"><a href="#文本高亮" class="headerlink" title="文本高亮"></a>文本高亮</h3><p>使用&#x3D;&#x3D;需要高亮的文字&#x3D;&#x3D;</p><p>注意，这里的高亮需要打开<code>文件-&gt;偏好设置</code>进行设置。或使用快捷键<code>Ctrl+，</code>直接打开,设置如下图所示</p><p><img src="https://cdn.jsdelivr.net/gh/tyxiumud/blog.img/image-20220501225730007.png"></p><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><p>使用<code>Ctrl+T</code>进行表格</p><table><thead><tr><th>说明</th><th>快捷键</th></tr></thead><tbody><tr><td>创建表格</td><td><code>Ctrl+T</code></td></tr><tr><td>删除行</td><td><code>Ctrl+Shift+Backspace</code></td></tr><tr><td>添加行</td><td><code>Ctrl+Enter</code></td></tr></tbody></table><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><p>可以添加有序列表与无序列表</p><table><thead><tr><th>列表</th><th>快捷键</th></tr></thead><tbody><tr><td>有序列表</td><td><code>Ctrl + Shift + [</code></td></tr><tr><td>无序列表</td><td><code>Ctrl + Shift + ]</code></td></tr></tbody></table><p>演示：</p><ol><li>有序列表1</li><li>有序列表2</li></ol><ul><li>无序列表1</li><li>无序列表2</li></ul><h2 id="代码注释"><a href="#代码注释" class="headerlink" title="代码注释"></a>代码注释</h2><p>一般使用两种方式进行舒适，</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">可以快速使用代码栏目，使用快捷键Ctrl+Shift+K来进行设置</span><br></pre></td></tr></table></figure><p>较为短快捷键  <code>Ctrl+shift+</code></p><h2 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h2><p>使用三个<code>---</code>来表示分割线</p><hr><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><blockquote><p>使用快捷键 <code>Ctrl+Shift+Q</code></p></blockquote><h2 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h2><p>复制网址后直接使用快捷键<code>Ctrl+K</code></p><p>点击<a href="https://tyxiumud.github.io/">我的博客</a>跳转</p><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><p>直接使用<code>[TOC]</code>在文章的开头即可</p><h1 id="图床的设置于相关问题"><a href="#图床的设置于相关问题" class="headerlink" title="图床的设置于相关问题"></a>图床的设置于相关问题</h1><h3 id="安装与配置问题"><a href="#安装与配置问题" class="headerlink" title="安装与配置问题"></a>安装与配置问题</h3><p>建议这里使用<code>github+PicGo+CDN</code>搭建自己的图床，简单好用，免费。具体设置如下</p><h4 id="1，下载PicGo"><a href="#1，下载PicGo" class="headerlink" title="1，下载PicGo"></a>1，下载<code>PicGo</code></h4><p>github地址：<a href="https://github.com/Molunerfinn/picgo/releases">https://github.com/Molunerfinn/picgo/releases</a></p><p>选择latest版本即可，下载对应的版本，笔者使用的如下</p><p><img src="https://cdn.jsdelivr.net/gh/tyxiumud/blog.img/image-20220502002103441.png"></p><p>下载完成后安装即可。</p><h4 id="2，软件配置"><a href="#2，软件配置" class="headerlink" title="2，软件配置"></a>2，软件配置</h4><p><img src="https://cdn.jsdelivr.net/gh/tyxiumud/blog.img/image-20220502002941857.png" alt="软件配置"></p><p>获取你github上的Token，填入即可，然后设定你的自定义域名如下</p><p><code>https://cdn.jsdelivr.net/gh/</code>+<code>tyxiumud/blog.img</code></p><p>我的仓库名称。这里仓库的建立于Token获取方式自行百度。</p><h4 id="3，在Typora中使用"><a href="#3，在Typora中使用" class="headerlink" title="3，在Typora中使用"></a>3，在Typora中使用</h4><p><img src="https://cdn.jsdelivr.net/gh/tyxiumud/blog.img/image-20220502003324053.png"></p><p>这里验证上传选项要是验证不通过也不用担心，编辑界面可以点击图片上传或者图片会自动上传到你的仓库。</p><h4 id="4，将文章图片整理保存-建议"><a href="#4，将文章图片整理保存-建议" class="headerlink" title="4，将文章图片整理保存(建议)"></a>4，将文章图片整理保存(建议)</h4><p>数据无价，本地的或许是最安全的，每次写完一篇笔记文章建议进行对其中的图片进行保存</p><p><code>C:\Users\username\AppData\Roaming\Typora\typora-user-images</code>可以找到对应的图片。<img src="https://cdn.jsdelivr.net/gh/tyxiumud/blog.img/image-20220502003907502.png" alt="image-20220502003907502"></p><p>将其自行整理保存即可。</p><h2 id="CSDN-转存失败问题解决"><a href="#CSDN-转存失败问题解决" class="headerlink" title="CSDN 转存失败问题解决"></a>CSDN 转存失败问题解决</h2><p>将Typora的文章转到CSDN时候会出现问题。使用如下脚本替换图片显示的方式即可。<a href="https://blog.csdn.net/weixin_43578492/article/details/117087023?spm=1001.2014.3001.8078">参考链接</a></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import re</span><br><span class="line">name = &quot;文章名称&quot;</span><br><span class="line">old_path = name+&quot;.md&quot;</span><br><span class="line">new_path = name+&quot;csdn&quot;+&quot;.md&quot;</span><br><span class="line">old_file = open(old_path, &#x27;r&#x27;, encoding=&#x27;utf-8&#x27;)</span><br><span class="line">new_file = open(new_path, &#x27;w&#x27;, encoding=&#x27;utf-8&#x27;)</span><br><span class="line"></span><br><span class="line">old_line = old_file.readline()</span><br><span class="line">count = 0</span><br><span class="line"></span><br><span class="line">while old_line:</span><br><span class="line">    if &quot;![&quot; in old_line:</span><br><span class="line">        url = re.findall(&#x27;https://.*png|https://.*jpeg|https://.*jpg&#x27;, old_line)</span><br><span class="line">        img = &#x27;&lt;img src=&quot;&#x27; + url[0] + &#x27;&quot;/&gt;&#x27;</span><br><span class="line">        new_line = re.sub(&#x27;!\[.*\)&#x27;, img, old_line)</span><br><span class="line">        new_file.write(new_line)</span><br><span class="line">        print(old_line + &#x27;   ===&gt;   &#x27; + new_line)</span><br><span class="line">        count += 1</span><br><span class="line">    else:</span><br><span class="line">        new_file.write(old_line)</span><br><span class="line">    old_line = old_file.readline()</span><br><span class="line"></span><br><span class="line">old_file.close()</span><br><span class="line">new_file.close()</span><br><span class="line"></span><br><span class="line">print(&#x27;\n已成功替换&#x27; + str(count) + &#x27;处外链问题&#x27;)</span><br></pre></td></tr></table></figure><p>最后输出的文件复制到csdn即可</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="个人博客搭建" scheme="https://tyxiumud.github.io/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
    <category term="Typora" scheme="https://tyxiumud.github.io/tags/Typora/"/>
    
  </entry>
  
  <entry>
    <title>用GVIM/VIM写Verilog——VIM配置分享</title>
    <link href="https://tyxiumud.github.io/posts/d995527356d1/"/>
    <id>https://tyxiumud.github.io/posts/d995527356d1/</id>
    <published>2022-04-30T15:47:25.000Z</published>
    <updated>2022-05-07T10:06:49.192Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>使用VIM或GVIＭ最基本的配置，不包含任何插件相关的设置，VIM用于写verilog，非常欢迎大家在评论区分享讨论。本文不进行插件的配置，不进行基本使用方式与使用技巧的说明，仅作为基本配置的分享交流</p></blockquote><h1 id="基本配置"><a href="#基本配置" class="headerlink" title="基本配置"></a>基本配置</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">set</span> nocompatible <span class="string">&quot;不兼容vi</span></span><br><span class="line"><span class="string">syntax on  &quot;</span>语法高亮度显示 </span><br><span class="line"><span class="built_in">set</span> noerrorbells <span class="string">&quot; 不让vim发出讨厌的滴滴声 </span></span><br><span class="line"><span class="string">set shortmess=atI &quot;</span> 启动的时候不显示那个援助索马里儿童的提示 </span><br><span class="line"><span class="built_in">set</span> t_Co=256  <span class="string">&quot;开启256色支持</span></span><br><span class="line"><span class="string">set hlsearch  &quot;</span>搜索设置高亮</span><br><span class="line">colorscheme desert <span class="string">&quot;配色方案</span></span><br><span class="line"><span class="string">set background=dark &quot;</span>配置主题整体的色调，只有两个选择：dark和light（暗色调和亮色调）</span><br><span class="line">highlight Function cterm=bold,underline ctermbg=red ctermfg=green <span class="string">&quot;color set</span></span><br><span class="line"><span class="string">set nu  &quot;</span>显示行号</span><br><span class="line"><span class="built_in">set</span> relativenumber <span class="string">&quot;显示相对行号</span></span><br><span class="line"><span class="string">set cursorcolumn &quot;</span>add cursor <span class="keyword">in</span> column</span><br><span class="line"><span class="built_in">set</span> cursorline <span class="string">&quot;add cursor in line </span></span><br><span class="line"><span class="string">&quot;</span><span class="built_in">set</span> guifont=Monospace\ 16 <span class="string">&quot;gui style</span></span><br><span class="line"><span class="string">set guifont=Courier_new:h16</span></span><br><span class="line"><span class="string">set lines=35 columns=118 &quot;</span>其中lines是窗口显示的行数，columns是窗口显示的列数</span><br><span class="line">winpos 200 100 <span class="string">&quot;后面两个参数指的自屏幕左上角像素值参考位置</span></span><br><span class="line"><span class="string">set tabstop=4 &quot;</span>tab键相当于4个空格键</span><br><span class="line"><span class="built_in">set</span> expandtab <span class="string">&quot;來將 tab 转成 space  combine with tabstop</span></span><br><span class="line"><span class="string">set shiftwidth=4 &quot;</span>换行自动变为空格</span><br><span class="line"><span class="built_in">set</span> autoindent <span class="string">&quot;设置自动缩进  自动缩进，当你第一行敲 tab + 文字 回车后 下一行自动给你加个 tab </span></span><br><span class="line"><span class="string">set backspace=2 &quot;</span><span class="built_in">enable</span> backspace</span><br><span class="line"><span class="built_in">set</span> novisualbell <span class="string">&quot;不要闪烁</span></span><br><span class="line"><span class="string">set laststatus=2 &quot;</span>启动显示状态行</span><br><span class="line"><span class="built_in">set</span> encoding=utf-8 <span class="string">&quot;文件编码</span></span><br><span class="line"><span class="string">set completeopt=menu,preview,longest &quot;</span>自动补全相关的设置</span><br><span class="line"><span class="string">&quot;不要生成swap文件，当buffer被丢弃的时候隐藏它</span></span><br><span class="line"><span class="string">set local noswapfile</span></span><br><span class="line"><span class="string">set bufhidden=hide</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">inoremap ( ()&lt;ESC&gt;i</span></span><br><span class="line"><span class="string">inoremap [ []&lt;ESC&gt;i</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;</span>ban up and also keys </span><br><span class="line"><span class="string">&quot;imap &lt;Up&gt; &lt;Nop&gt;</span></span><br><span class="line"><span class="string">&quot;</span>imap &lt;Down&gt; &lt;Nop&gt;</span><br><span class="line"><span class="string">&quot;imap &lt;Left&gt; &lt;Nop&gt;</span></span><br><span class="line"><span class="string">&quot;</span>imap &lt;Right&gt; &lt;Nop&gt;</span><br><span class="line"><span class="string">&quot;nmap &lt;Up&gt; &lt;Nop&gt;</span></span><br><span class="line"><span class="string">&quot;</span>nmap &lt;Down&gt; &lt;Nop&gt;</span><br><span class="line"><span class="string">&quot;nmap &lt;Left&gt; &lt;Nop&gt;</span></span><br><span class="line"><span class="string">&quot;</span>nmap &lt;Right&gt; &lt;Nop&gt;</span><br><span class="line"></span><br><span class="line">imap jk &lt;Esc&gt;  <span class="string">&quot;在编辑模式下使用jk替代ESC进入命令模式</span></span><br><span class="line"><span class="string">imap &lt;C-L&gt; &lt;C-X&gt;&lt;C-L&gt; “使用CTRL L 代替 CTRL X ＋CTRL L 就是整个句子的补全</span></span><br><span class="line"><span class="string">nmap ,l ^</span></span><br><span class="line"><span class="string">nmap ,r $</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;</span>进行版权声明的设置</span><br><span class="line"><span class="string">&quot;添加或更新头</span></span><br><span class="line"><span class="string">map &lt;F3&gt; :call TitleDet()&lt;cr&gt;&#x27;s</span></span><br><span class="line"><span class="string">function AddTitle()</span></span><br><span class="line"><span class="string">    call append(0,&quot;</span>/*=============================================================================<span class="string">&quot;)</span></span><br><span class="line"><span class="string">    call append(1,&quot;</span><span class="comment">#&quot;)</span></span><br><span class="line">    call append(2,<span class="string">&quot;# Author: meng  - email@vip.qq.com&quot;</span>)</span><br><span class="line">    call append(3,<span class="string">&quot;#&quot;</span>)</span><br><span class="line">    call append(4,<span class="string">&quot;# QQ : xxxxxxxxx &quot;</span>)</span><br><span class="line">    call append(5,<span class="string">&quot;#&quot;</span>)</span><br><span class="line">    call append(6,<span class="string">&quot;# Last modified: &quot;</span>.strftime(<span class="string">&quot;%Y-%m-%d %H:%M&quot;</span>))</span><br><span class="line">    call append(7,<span class="string">&quot;#&quot;</span>)</span><br><span class="line">    call append(8,<span class="string">&quot;# Filename: &quot;</span>.<span class="built_in">expand</span>(<span class="string">&quot;%:t&quot;</span>))</span><br><span class="line">    call append(9,<span class="string">&quot;#&quot;</span>)</span><br><span class="line">    call append(10,<span class="string">&quot;# Description: &quot;</span>)</span><br><span class="line">    call append(11,<span class="string">&quot;#&quot;</span>)</span><br><span class="line">    call append(12,<span class="string">&quot;=============================================================================*/&quot;</span>)</span><br><span class="line">    echohl WarningMsg | <span class="built_in">echo</span> <span class="string">&quot;Successful in adding the copyright.&quot;</span> | echohl None</span><br><span class="line">endf</span><br><span class="line"><span class="string">&quot;更新最近修改时间和文件名</span></span><br><span class="line"><span class="string">function UpdateTitle()</span></span><br><span class="line"><span class="string">    normal m&#x27;</span></span><br><span class="line"><span class="string">    execute &#x27;/# *Last modified:/s@:.*<span class="variable">$@</span>\=strftime(&quot;</span>:\t%Y-%m-%d %H:%M<span class="string">&quot;)@&#x27;</span></span><br><span class="line"><span class="string">    normal &#x27;&#x27;</span></span><br><span class="line"><span class="string">    normal mk</span></span><br><span class="line"><span class="string">    execute &#x27;/# *Filename:/s@:.*<span class="variable">$@</span>\=&quot;</span>:\t\t<span class="string">&quot;.expand(&quot;</span>%:t<span class="string">&quot;)@&#x27;</span></span><br><span class="line"><span class="string">    execute &quot;</span>noh<span class="string">&quot;</span></span><br><span class="line"><span class="string">    normal &#x27;k</span></span><br><span class="line"><span class="string">    echohl WarningMsg | echo &quot;</span>Successful <span class="keyword">in</span> updating the copy right.<span class="string">&quot; | echohl None</span></span><br><span class="line"><span class="string">endfunction</span></span><br><span class="line"><span class="string">&quot;</span>判断前10行代码里面，是否有Last modified这个单词，</span><br><span class="line"><span class="string">&quot;如果没有的话，代表没有添加过作者信息，需要新添加；</span></span><br><span class="line"><span class="string">&quot;</span>如果有的话，那么只需要更新即可</span><br><span class="line"><span class="keyword">function</span> TitleDet()</span><br><span class="line">    <span class="built_in">let</span> n=1</span><br><span class="line">    <span class="string">&quot;默认为添加</span></span><br><span class="line"><span class="string">    while n &lt; 10</span></span><br><span class="line"><span class="string">        let line = getline(n)</span></span><br><span class="line"><span class="string">        if line =~ &#x27;^\#\s*\S*Last\smodified:\S*.*$&#x27;</span></span><br><span class="line"><span class="string">            call UpdateTitle()</span></span><br><span class="line"><span class="string">            return</span></span><br><span class="line"><span class="string">        endif</span></span><br><span class="line"><span class="string">        let n = n + 1</span></span><br><span class="line"><span class="string">    endwhile</span></span><br><span class="line"><span class="string">    call AddTitle()</span></span><br><span class="line"><span class="string">endfunction</span></span><br></pre></td></tr></table></figure><h1 id="几点说明"><a href="#几点说明" class="headerlink" title="几点说明"></a>几点说明</h1><h2 id="1，禁用方向键，使用-jk-代替ESC"><a href="#1，禁用方向键，使用-jk-代替ESC" class="headerlink" title="1，禁用方向键，使用 jk 代替ESC"></a>1，禁用方向键，使用 jk 代替ESC</h2><p>在VIN中操作，为了使得双手脱离键盘，但是方向键距离手指较远，ESC同样，因此禁用掉方向键，同时使用jk代替ESC进入命令模式。<br>VIM中有三种模式：命令模式，输入模式，命令行模式，其<a href="https://www.cnblogs.com/helloweworld/p/3525905.html">map映射</a><br>在vim配置文件中经常会看到map、nmap、imap<br>n ——表示在普通模式下生效。<br>v ——表示在可视模式下生效。<br>i ——表示在插入模式下效。<br>具体配置方式见上</p><h2 id="2，自动补全命令配置"><a href="#2，自动补全命令配置" class="headerlink" title="2，自动补全命令配置"></a>2，自动补全命令配置</h2><p>当我按下a的时候，弹出的提示框是包含所有a开头的提示，但是编辑器上只有a和光标，这个时候如果我需要再次使用b来进行过滤直接敲入b，编辑器上就是ab和光标，过滤出来的就是ab开头的单词。<br><img src="https://img-blog.csdnimg.cn/94cddb804f1047768c9935774bf4ecdd.png"><br>该设置摘自<a href="https://www.douban.com/group/topic/26633511/">vim自动补全的问题</a><br>设置行命令补时候，直接使用Ctrl-l即可，不用使用Ctrl-x Ctrl-l</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">imap &lt;C-L&gt; &lt;C-X&gt;&lt;C-L&gt;</span><br></pre></td></tr></table></figure><h2 id="3，进行版权声明的设置"><a href="#3，进行版权声明的设置" class="headerlink" title="3，进行版权声明的设置"></a>3，进行版权声明的设置</h2><p>改声明摘自博客，可以继续进行完善，使用F3即可调用</p><h2 id="4，一些其他映射"><a href="#4，一些其他映射" class="headerlink" title="4，一些其他映射"></a>4，一些其他映射</h2><p>“调整格式以便对齐（例化后的）</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">:map &lt;F6&gt; :s/^ *\./        ./&lt;cr&gt;^f(i                              &lt;ESC&gt;f)i                               &lt;ESC&gt;^24ldw24ldwa  &lt;ESC&gt;hdwj</span><br></pre></td></tr></table></figure><p>GVIM配置自动调整将F6映射为后面一长串指令，具体指令可以自行尝试</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="文本编辑器" scheme="https://tyxiumud.github.io/categories/%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91%E5%99%A8/"/>
    
    
    <category term="GVIM" scheme="https://tyxiumud.github.io/tags/GVIM/"/>
    
  </entry>
  
  <entry>
    <title>IC设计EDA软件虚拟机环境配置与安装教程</title>
    <link href="https://tyxiumud.github.io/posts/a65941daccf9/"/>
    <id>https://tyxiumud.github.io/posts/a65941daccf9/</id>
    <published>2022-04-28T12:04:59.000Z</published>
    <updated>2022-05-07T15:56:25.721Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>IC学习的时候，需要搭建的EDA环境。以数字电路设计为例，需要进行代码编写，验证仿真，综合，形式验证，后端综合等，相关软件，本博文分享一篇EETOP论坛网友ZHZIC分享的安装方式与资源，笔者自行依据教程进行安装，可以运行相关数字设计所需要用的软件。<br>EDA虚拟机仅供个人学习使用，且为免费使用，切勿商用。如果商用，请购买正版工具。使用者禁止私自售卖该虚拟机，带来的侵权后果由使用者自行承担。</p></blockquote><p>先给我的环境。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">链接：https://pan.baidu.com/s/1WfbL6dcHg7nKVTDGq9hOzQ </span><br><span class="line">提取码：nnsq </span><br></pre></td></tr></table></figure><p>其中解压密码与root密码均是： 123456<br>目前已经集成了数字，模拟相关的基本工具，工艺库如下。</p><p>├── Cdence<br>│   ├── IC617<br>│   ├── IScape<br>│   ├── license<br>│   └── MMSIM151<br>├── iso<br>├── lib<br>│   ├── SMIC_018_MMRF_oa<br>│   └── tsmc180rf<br>├── Mentor<br>│   ├── calibre2018<br>│   └── license<br>├── Package<br>│   ├── cadence<br>│   └── synopsys2018<br>├── patch<br>└── Synopsys<br>    ├── Formality2018<br>    ├── ICC2018<br>    ├── installer<br>    ├── LC2018<br>    ├── PrimeTime2018<br>    ├── SCL_2018<br>    ├── SpyGlass2016<br>    ├── Starrc2018<br>    ├── syn2018<br>    ├── VCS2018<br>    └── Verdi2018</p><p>现在的资源太多了，自己去找，会找到很多，不知道有用没用的，下面的教程笔者经过尝试可以安装运行。教程步骤非常齐全，且论坛坛友评价也很不错。链接如下<br>1，博文的推荐与安装方式<br><a href="http://bbs.eetop.cn/thread-897274-1-1.html">EDA软件安装教程，包括RHEL7.8、cadence软件、calibre、s家软件</a><br>2，SpyGlass的安装<br><a href="http://bbs.eetop.cn/thread-627969-1-1.html">SpyGlass2016.06安装破解教程</a><br>3，笔者安装环境展示<br><img src="https://img-blog.csdnimg.cn/37ad1535831f489ea48962f716ca53cb.png" alt="测试文章图片1"><br><img src="https://img-blog.csdnimg.cn/289eb3a412b44e23b56004db646ff593.png"><br><img src="https://img-blog.csdnimg.cn/817f3c43bd024911a8dccedacc522621.png"></p><p>最后，根据教程，可以完成GVIM，SpyGalass,VCS，Verdi，DC，PT，FM，ICC等主要是数字相关的软件。有需要笔者可以提供安装好的虚拟机资源。后续笔者会提供各个软件使用的教程，主要是官方UG（User Guide）或者是SU（Student Guide）的lab学习总结或者是自行学习总结的小demo。<br>最后，感谢以上同学无私分享。</p><p>其他：<br>1，下面是自己在eetop开的帖子，有进一步问题可以进行参考。<a href="https://bbs.eetop.cn/thread-919520-1-1.html">全套数字模拟设计EDA环境。带模拟工艺库</a><br>VM版本笔者使用的链接如下，带破解安装教程。要是有可以使用自己的即可。最开始使用的时候选择我已移动虚拟机。否则无法使用。会导致破解失败！！！</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">链接：https://pan.baidu.com/s/1H1gmtQf6GTGVczGQP1j_5g</span><br><span class="line">提取码：e61y</span><br></pre></td></tr></table></figure><p>2，模拟的工艺库配置参考链接如下<br><a href="https://blog.csdn.net/weixin_44115643/article/details/118930454">Cadence Virtuoso IC617的启动和新建工程</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="数字IC设计" scheme="https://tyxiumud.github.io/categories/%E6%95%B0%E5%AD%97IC%E8%AE%BE%E8%AE%A1/"/>
    
    <category term="EDA环境搭建" scheme="https://tyxiumud.github.io/categories/%E6%95%B0%E5%AD%97IC%E8%AE%BE%E8%AE%A1/EDA%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
    
    <category term="数字IC环境配置" scheme="https://tyxiumud.github.io/tags/%E6%95%B0%E5%AD%97IC%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>RedHat Linux 7安装CentOS 7 yum源</title>
    <link href="https://tyxiumud.github.io/posts/46f984b01519/"/>
    <id>https://tyxiumud.github.io/posts/46f984b01519/</id>
    <published>2022-04-28T10:26:34.000Z</published>
    <updated>2022-05-07T15:56:20.188Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><p>使用yum进行安装软件的时候报错</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Loaded plugins: langpacks, product-id, search-disabled-repos, subscription-manager</span><br><span class="line">This system is not registered with an entitlement server. You can use subscription-manager to register.</span><br></pre></td></tr></table></figure><p>yum 是一个软件安装管理的机制，通常情况下安装软件需要连接到网络上，从网络上的软件库进行软件的下载及安装，但是 RHEL 系统只有注册的用户才能用 yum 机制进行线上安装，可以直接将将 RHEL7 的 yum 源换成 Centos7 的。就可以进行安装了。</p><h1 id="解决步骤"><a href="#解决步骤" class="headerlink" title="解决步骤"></a>解决步骤</h1><h2 id="0，进入-x2F-opt目录，进入root模式，新建yum目录"><a href="#0，进入-x2F-opt目录，进入root模式，新建yum目录" class="headerlink" title="0，进入&#x2F;opt目录，进入root模式，新建yum目录"></a>0，进入&#x2F;opt目录，进入root模式，新建yum目录</h2><p><img src="https://img-blog.csdnimg.cn/fc214cfdf56e44e38b824e4a39b57b2d.png" alt="在这里插入图片描述"></p><h2 id="1，查看自己redhat版本"><a href="#1，查看自己redhat版本" class="headerlink" title="1，查看自己redhat版本"></a>1，查看自己redhat版本</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> /etc/redhat-release</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/892387f5b703417098a222cc6a378f11.png" alt="在这里插入图片描述"><br>要是版本一致后续的操作与博主一致，不一致的需要自行进行略微的改动。</p><h2 id="2，查看redhat-7-0系统本身所安装的那些yum-软件包并将其一一删除"><a href="#2，查看redhat-7-0系统本身所安装的那些yum-软件包并将其一一删除" class="headerlink" title="2，查看redhat 7.0系统本身所安装的那些yum 软件包并将其一一删除"></a>2，查看redhat 7.0系统本身所安装的那些yum 软件包并将其一一删除</h2><p>查看已经安装的软件包</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">rpm -qa | grep yum</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/02855ac9303142b18b5cb480c69690a8.png" alt="在这里插入图片描述"><br>删除<br>将黑体换为以上安装的软件包，将其意义删除<br>rpm -e <strong>yum-rhn-plugin-2.0.1-10.el7.noarch</strong> –nodeps<br>也可以使用如下命令，将其一次删除完<br>rpm -e PackageKit-yum-1.1.10-2.el7.x86_64 yum-3.4.3-167.el7.noarch  –nodeps</p><p>可重新查看，检查是否已经去全部删除，确保已经完全删除</p><h2 id="3，确定自己的虚拟机可以上网"><a href="#3，确定自己的虚拟机可以上网" class="headerlink" title="3，确定自己的虚拟机可以上网"></a>3，确定自己的虚拟机可以上网</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">ping www.baidu.com</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/11e99542f04d455e86b35da8087324ea.png" alt="在这里插入图片描述"><br>使用<code>Ctrl+C</code>可以终止访问</p><h2 id="4，找到自己系统所对应的文件包版本更新"><a href="#4，找到自己系统所对应的文件包版本更新" class="headerlink" title="4，找到自己系统所对应的文件包版本更新"></a>4，找到自己系统所对应的文件包版本更新</h2><p>下载的网站为  <a href="http://mirrors.163.com/">http://mirrors.163.com/</a></p><p>进入找到你自己版本的对应文件，注意下载的需要与你上面删除的一致。CentOS几乎和RedHat是一样的，所以无需担心软件包是否可安装。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget http://mirrors.163.com/centos/7/os/x86_64/Packages/PackageKit-yum-1.1.10-2.el7.centos.x86_64.rpm</span><br><span class="line">wget http://mirrors.163.com/centos/7/os/x86_64/Packages/yum-3.4.3-168.el7.centos.noarch.rpm</span><br><span class="line">wget http://mirrors.163.com/centos/7/os/x86_64/Packages/yum-langpacks-0.4.2-7.el7.noarch.rpm</span><br><span class="line">wget http://mirrors.163.com/centos/7/os/x86_64/Packages/yum-metadata-parser-1.1.4-10.el7.x86_64.rpm</span><br><span class="line">wget http://mirrors.163.com/centos/7/os/x86_64/Packages/yum-rhn-plugin-2.0.1-10.el7.noarch.rpm</span><br><span class="line">wget http://mirrors.163.com/centos/7/os/x86_64/Packages/yum-utils-1.1.31-54.el7_8.noarch.rpm</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/5d451b63adeb432691a5da30834ed3d4.png" alt="在这里插入图片描述"></p><h2 id="5，查看已经下载的文件"><a href="#5，查看已经下载的文件" class="headerlink" title="5，查看已经下载的文件"></a>5，查看已经下载的文件</h2><p><img src="https://img-blog.csdnimg.cn/037eb47f34084444ad36ff2806b9bbcb.png" alt="在这里插入图片描述"></p><h2 id="6，安装软件包"><a href="#6，安装软件包" class="headerlink" title="6，安装软件包"></a>6，安装软件包</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rpm -ivh *.rpm --force --nodeps</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/3b2f31ed764048c2a508c2d6cf44a97e.png" alt="在这里插入图片描述"></p><h2 id="7，新建repo-配置文件"><a href="#7，新建repo-配置文件" class="headerlink" title="7，新建repo 配置文件"></a>7，新建repo 配置文件</h2><p>新建一个终端，进入超级用户模式，进入目录<code>cd /etc/yum.repos.d/</code><br>编辑文件<code>gedit CentOS-Base.repo</code>在弹出的文本框输入</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#CentOS-Base.repo</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># The mirror system uses the connecting IP address of the client and the</span></span><br><span class="line"><span class="comment"># update status of each mirror to pick mirrors that are updated to and</span></span><br><span class="line"><span class="comment"># geographically close to the client.  You should use this for CentOS updates</span></span><br><span class="line"><span class="comment"># unless you are manually picking other mirrors.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># If the mirrorlist= does not work for you, as a fall back you can try the</span></span><br><span class="line"><span class="comment"># remarked out baseurl= line instead.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">[base]</span><br><span class="line">name=CentOS-<span class="variable">$7</span> - Base - 163.com</span><br><span class="line"><span class="comment">#mirrorlist=http://mirrorlist.centos.org/?release=$7&amp;arch=$basearch&amp;repo=os</span></span><br><span class="line">baseurl=http://mirrors.163.com/centos/7/os/<span class="variable">$basearch</span>/</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=http://mirrors.163.com/centos/RPM-GPG-KEY-CentOS-7</span><br><span class="line"></span><br><span class="line"><span class="comment">#released updates</span></span><br><span class="line">[updates]</span><br><span class="line">name=CentOS-<span class="variable">$7</span> - Updates - 163.com</span><br><span class="line"><span class="comment">#mirrorlist=http://mirrorlist.centos.org/?release=$7&amp;arch=$basearch&amp;repo=updates</span></span><br><span class="line">baseurl=http://mirrors.163.com/centos/7/updates/<span class="variable">$basearch</span>/</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=http://mirrors.163.com/centos/RPM-GPG-KEY-CentOS-7</span><br><span class="line"></span><br><span class="line"><span class="comment">#additional packages that may be useful</span></span><br><span class="line">[extras]</span><br><span class="line">name=CentOS-<span class="variable">$7</span> - Extras - 163.com</span><br><span class="line"><span class="comment">#mirrorlist=http://mirrorlist.centos.org/?release=$7&amp;arch=$basearch&amp;repo=extras</span></span><br><span class="line">baseurl=http://mirrors.163.com/centos/7/extras/<span class="variable">$basearch</span>/</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=http://mirrors.163.com/centos/RPM-GPG-KEY-CentOS-7</span><br><span class="line"></span><br><span class="line"><span class="comment">#additional packages that extend functionality of existing packages</span></span><br><span class="line">[centosplus]</span><br><span class="line">name=CentOS-<span class="variable">$7</span> - Plus - 163.com</span><br><span class="line">baseurl=http://mirrors.163.com/centos/7/centosplus/<span class="variable">$basearch</span>/</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=0</span><br><span class="line">gpgkey=http://mirrors.163.com/centos/RPM-GPG-KEY-CentOS-7</span><br></pre></td></tr></table></figure><p>保存退出<img src="https://img-blog.csdnimg.cn/e6acbf67982a485ab52b1977bf7b438e.png" alt="在这里插入图片描述"></p><h2 id="8，清除缓存"><a href="#8，清除缓存" class="headerlink" title="8，清除缓存"></a>8，清除缓存</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum clean all</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/ffb0db9781964d198052ad1bd2a6195d.png" alt="在这里插入图片描述"></p><h2 id="9，尝试安装Gvim，测试可以正常使用"><a href="#9，尝试安装Gvim，测试可以正常使用" class="headerlink" title="9，尝试安装Gvim，测试可以正常使用"></a>9，尝试安装Gvim，测试可以正常使用</h2><p>使用如下<code>yum -y install gvim</code><br><img src="https://img-blog.csdnimg.cn/c8c7aed6189e4f7bae6826c41f4fa9e3.png" alt="在这里插入图片描述"><br>安装等待，完成时候会出现Complete！<br><img src="https://img-blog.csdnimg.cn/b01af2b383ec4347b7d42af05ec68f43.png"></p><p>打开一个终端，输入<code>gvim</code>键入<code>:q</code>退出<br><img src="https://img-blog.csdnimg.cn/cca38f3a3ca54914ad0c8155092778e9.png" alt="在这里插入图片描述"></p><h2 id="10，删除下载的安装包与yum目录"><a href="#10，删除下载的安装包与yum目录" class="headerlink" title="10，删除下载的安装包与yum目录"></a>10，删除下载的安装包与yum目录</h2><p><img src="https://img-blog.csdnimg.cn/60ab0fd1c4f246d59b5baf8f33a3f8fb.png" alt="在这里插入图片描述"></p><h1 id="参考博文"><a href="#参考博文" class="headerlink" title="参考博文"></a>参考博文</h1><p><a href="https://www.linuxidc.com/Linux/2017-04/142444.htm">RedHat Linux 7安装CentOS 7 yum源</a><br><a href="https://blog.csdn.net/u010194538/article/details/77855103">rpm安装软件时提示warning: *.rpm: Header V3 RSA&#x2F;SHA256 Signature, keykey ID c105b9de:</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="数字IC设计" scheme="https://tyxiumud.github.io/categories/%E6%95%B0%E5%AD%97IC%E8%AE%BE%E8%AE%A1/"/>
    
    <category term="EDA环境搭建" scheme="https://tyxiumud.github.io/categories/%E6%95%B0%E5%AD%97IC%E8%AE%BE%E8%AE%A1/EDA%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
    
    <category term="数字IC环境配置" scheme="https://tyxiumud.github.io/tags/%E6%95%B0%E5%AD%97IC%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    
  </entry>
  
</feed>
